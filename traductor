#!/usr/bin/env bash
# traductor de linea de comandos

TRADUCCIONES=~/traducciones
DESTINO=$TRADUCCIONES/$1_es.txt

[[ -z $TRADUCCIONES ]] && mkdir $TRADUCCIONES

# verifica que la entrada sea un archivo de texto
if [ $(file "$1" | grep -c 'text') -ne 0 ]; then
	ENTRADA="$1"
else
	echo ' !! entrada no valida, se esperaba un archivo de texto !!' && exit
fi

function showmessage() {
	echo -e "\n\t\e[1;34;40m ${@} \e[m \n"
}

# functions
function traductor() {
	echo -n 'traductor: presiona CTRL + C para pasarlo a segundo plano o espera a que finalize la traduccion' && sleep 2s && echo "    "
	cat "$1" | grep -E '.+' | while read line; do
		# The main function #####
		echo "$line" | trans -u "Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/81.0" -no-browser -b :es &
		##### The main function #
		# mata procesos de ayuda de translate-shell
		(ps ax | grep 'translate.goog' | awk '{print $1}' | xargs kill) || true >/dev/null
		# envia errores(2) por gramatica a /dev/null y salidas exitosas(1) al destino de traduccion
	done 2>/dev/null 1>$DESTINO
	exit 0
}

function logprogress() {
	tput civis
	function monitorprogress() {
		while :; do
			Loger=$(tail -1 "${DESTINO}")
			Clean='                            '
			echo -ne "\e[1;33;40m    $(wc -l "${ENTRADA}" | awk '{print $1}') / $(wc -l "${DESTINO}" | awk '{print $1}') [\e[m  $(echo ${Loger::30} && sleep 0.3s && echo ${Clean::30})  \e[1;33;40m]\e[m\r"
		done
	}
	trap ctrl_c INT
	function ctrl_c() {
		echo -e "\n\n\e[1;33;40m [*]Pasando a segundo plano...\e[m\n\n"
		tput cnorm
		exit 0
	}
	monitorprogress
}

function initflag() {
	traductor "$ENTRADA" &
	disown
}

# main execution
ONL=$(echo -e "\e[1;39;40m${1}\e[m")
TRD=$(echo -e "\e[1;39;40m${TRADUCCIONES}\e[m")
(initflag &) && sleep 2s && echo '    ['"$ONL"'] ====================> ['"$TRD"']' && logprogress
